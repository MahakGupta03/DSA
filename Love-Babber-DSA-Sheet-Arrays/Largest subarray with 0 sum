class GfG
{
//OPTIMAL
/* prefix sum ko calculate krte huye chalenge , 
agr kisi index tk ka sum equal ho jata h uske aage idex k slements ko add krenge 
mtlb dono index k bich k elements ka sum 0 h*/
    int maxLen(int arr[], int n)
    {
        int maxi = 0;
        int sum = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=0;i<n;i++){
            sum+=arr[i];
            if(sum==0){
                maxi = i+1;
            }
            else {
                if(map.get(sum)!=null){
                    maxi = Math.max(maxi, i-map.get(sum));
                }
                else{
                    map.put(sum, i);
                }
            }
        }
        return maxi;
    }
    
//BRUTE FORCE
    // int maxLen(int arr[], int n)
    // {
    //     int maxi = 0;
    //     for(int i=0;i<n;i++){
    //         int sum = 0;
            
    //         for(int j=i;j<n;j++){
    //             sum+=arr[j];
    //             if(sum==0) {
    //                 maxi = Math.max(maxi, j-i+1);
    //             }
    //         }
    //     }
    //     return maxi;
    // }
}
