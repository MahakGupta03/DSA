/* BASIC APPROACH */ [O(nlogn)]
        int n=nums.length;
        Arrays.sort(nums);
        return nums[n-k];

/*USING PRIORITY QUEUE(HEAP)*/  [O((n - k) * log(k)]
//create min heap using priority queue and add first k elements initially. fir heap k top element ko check kro agr vo chota h 
current element se to usko remove krdo naya element add krdo
        int n=nums.length; 
        PriorityQueue<Integer> heap = new PriorityQueue<>();
        for(int i=0;i<k;i++){
            heap.add(nums[i]);
        }
        for(int i=k;i<n;i++){
            if(heap.peek()<=nums[i]){
                heap.poll();
                heap.add(nums[i]);
            }
        }
        return heap.peek();
