public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root==null) return ans;
        Queue<TreeNode> q = new LinkedList<>();
        //maintaing flag for alternative sequences
        boolean leftToRight = true;
        q.add(root);
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for(int i=0;i<size;i++){
                TreeNode curr = q.peek();
                list.add(q.remove().val);
                if(curr.left!=null) q.add(curr.left);
                if(curr.right!=null) q.add(curr.right);
            }
            //if movement is from right ot left then add into ans is reverse order
            if(!leftToRight){
                Collections.reverse(list);
                leftToRight = true;
            }else{
                leftToRight=false;
            }   
            
            ans.add(list);

        }
        return ans;
    }
